From ac2effa95082428033df36c67e01ac7d7775acb2 Mon Sep 17 00:00:00 2001
From: H Karthik <hkarthik483@gmail.com>
Date: Fri, 24 May 2024 18:47:38 +0530
Subject: [PATCH] Create Patch File

---
 .gitignore                          |  2 ++
 pom.xml                             | 25 +++++++++++++++
 readme.md                           |  2 ++
 src/main/java/RewardsConverter.java | 47 +++++++++++++++++++++++++++++
 src/test/java/RewardValueTests.java | 38 +++++++++++++++++++++++
 5 files changed, 114 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 pom.xml
 create mode 100644 readme.md
 create mode 100644 src/main/java/RewardsConverter.java
 create mode 100644 src/test/java/RewardValueTests.java

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..92322c4
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+.idea/
+target/
diff --git a/pom.xml b/pom.xml
new file mode 100644
index 0000000..13d21da
--- /dev/null
+++ b/pom.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.vagabondsystems</groupId>
+    <artifactId>rewards-converter</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <dependencies>
+        <dependency>
+            <groupId>org.junit.jupiter</groupId>
+            <artifactId>junit-jupiter</artifactId>
+            <version>RELEASE</version>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+    <properties>
+        <maven.compiler.source>19</maven.compiler.source>
+        <maven.compiler.target>19</maven.compiler.target>
+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
+    </properties>
+
+</project>
\ No newline at end of file
diff --git a/readme.md b/readme.md
new file mode 100644
index 0000000..f2236c3
--- /dev/null
+++ b/readme.md
@@ -0,0 +1,2 @@
+# :airplane: Credit Rewards Converter :airplane:
+This is the project repo for the JPMC Software Engineering Lite Program, consult the program instructions for more information.
\ No newline at end of file
diff --git a/src/main/java/RewardsConverter.java b/src/main/java/RewardsConverter.java
new file mode 100644
index 0000000..70cb444
--- /dev/null
+++ b/src/main/java/RewardsConverter.java
@@ -0,0 +1,47 @@
+import java.util.Scanner;
+
+public class RewardsConverter {
+    private double cashValue;
+    private double milesValue;
+    private static final double MILES_TO_CASH_RATE = 0.0035;
+
+    // Constructor that accepts a cash value
+    public RewardsConverter(double cashValue) {
+        this.cashValue = cashValue;
+        this.milesValue = cashValue / MILES_TO_CASH_RATE;
+    }
+
+    // Constructor that accepts a miles value
+    public RewardsConverter(double milesValue, boolean isMiles) {
+        if (isMiles) {
+            this.milesValue = milesValue;
+            this.cashValue = milesValue * MILES_TO_CASH_RATE;
+        }
+    }
+
+    // Method to get the cash value
+    public double getCashValue() {
+        return this.cashValue;
+    }
+
+    // Method to get the miles value
+    public double getMilesValue() {
+        return this.milesValue;
+    }
+    public static void main(String[] args) {
+        var scanner = new Scanner(System.in);
+        System.out.println("Welcome to the Credit Card Rewards Converter!");
+        System.out.println("Please enter a cash value to convert to airline miles: ");
+        var input_value = scanner.nextLine();
+        double cashValue;
+        try {
+            cashValue = Double.parseDouble(input_value);
+        } catch (NumberFormatException exception) {
+            System.out.println("Could not parse input value as a double, exiting");
+            return;
+        }
+        System.out.println("converting $" + input_value + " to miles");
+        var rewardsValue = new RewardsConverter(cashValue);
+        System.out.println("$" + input_value + " is worth " + rewardsValue.getMilesValue() + " miles");
+    }
+}
\ No newline at end of file
diff --git a/src/test/java/RewardValueTests.java b/src/test/java/RewardValueTests.java
new file mode 100644
index 0000000..09ba42e
--- /dev/null
+++ b/src/test/java/RewardValueTests.java
@@ -0,0 +1,38 @@
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+
+class RewardsConverter {
+
+    @Test
+    void create_with_cash_value() {
+        double cashValue = 100;
+        var rewardValue = new RewardsConverter();
+        assertEquals(cashValue, rewardValue.getCashValue());
+    }
+
+    private double getCashValue() {
+        return 0;
+    }
+
+    @Test
+    void create_with_miles_value() {
+        int milesValue = 10000;
+        var rewardValue = new RewardsConverter();
+        assertEquals(milesValue, rewardValue.getMilesValue());
+    }
+
+    private int getMilesValue() {
+        return 0;
+    }
+
+    @Test
+    void convert_from_cash_to_miles() {
+        assert false;
+    }
+
+    @Test
+    void convert_from_miles_to_cash() {
+        assert false;
+    }
+}
-- 
2.39.2.windows.1

